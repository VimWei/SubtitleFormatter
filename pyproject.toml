[project]
name = "subtitleformatter"
version = "1.3.7"
description = "An intelligent subtitle processing tool that uses NLP models to clean, segment, and format text for better readability"
readme = "README.md"
authors = [
  { name = "VimWei" }
]
license = { text = "GPL-3.0" }
requires-python = ">=3.11"
dependencies = [
    "spacy>=3.7.2",
    "tomli-w>=1.0.0",
    "PySide6>=6.7.0",
]

[project.urls]
Homepage = "https://github.com/VimWei/SubtitleFormatter"

[project.scripts]
subtitleformatter = "subtitleformatter.__main__:main"


[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "flake8>=5.0.0,<7.2.0",
    "mypy>=1.0.0",
    "isort>=5.10.0",
    "coverage>=7.6.0",
]
# 脚本独立依赖组
text-diff = [
    "colorama>=0.4.4",
    "rich>=13.0.0",
    "click>=8.0.0",
]
clean-vtt = [
    "pandas>=1.5.0",
]
release = [
    "tomli-w>=1.0.0",
]
punctuation-adder = [
    "deepmultilingualpunctuation>=0.1.0",
]
# 无依赖脚本不需要定义group

[tool.uv]
package = true


[tool.pytest.ini_options]
# 测试发现
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
cache_dir = "tests/.pytest_cache"

# 输出选项
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--disable-warnings",
    "--tb=short",
    "--durations=10"
]

# 标记定义
markers = [
    "unit: 单元测试",
    "integration: 集成测试", 
    "performance: 性能测试",
    "slow: 慢速测试",
    "plugin: 插件测试",
    "text_cleaning: 文本清理插件测试",
    "punctuation_adder: 标点恢复插件测试",
    "text_to_sentences: 文本转句子插件测试",
    "sentence_splitter: 句子拆分插件测试"
]

# 过滤警告
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning", 
    "ignore::UserWarning:transformers.*"
]

# 最小版本要求
minversion = "6.0"

# 测试超时（秒）- 需要 pytest-timeout 插件
# timeout = 300

# 日志配置
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"


[tool.coverage.run]
data_file = "tests/.coverage"
source = ["plugins/builtin"]
omit = [
    "*/tests/*",
    "*/test_*", 
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*"
]

[tool.coverage.html]
directory = "tests/htmlcov"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError", 
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]


[tool.isort]
profile = "black"


[tool.black]
line-length = 100
target-version = ["py311"]
